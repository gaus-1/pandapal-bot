"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –±–æ—Ç–∞ PandaPal.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –±–æ—Ç–∞,
–æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—â–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏—é –º–µ–∂–¥—É —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ä–∞–∑–¥–µ–ª–∞–º–∏ –∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.

–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã –º–µ–Ω—é:
- üìö –ü–æ–º–æ—â—å —Å —É—Ä–æ–∫–∞–º–∏ (–≤—ã–±–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π)
- üéÆ –†–∞–∑–≤–∏–≤–∞—é—â–∏–µ –∏–≥—Ä—ã (–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –∏–≥—Ä—ã –∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã)
- üèÜ –ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è (–ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ –Ω–∞–≥—Ä–∞–¥)
- ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ (–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å)
- üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
- ‚ÑπÔ∏è –û –±–æ—Ç–µ (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –ø–æ–º–æ—â—å)

–ö–∞–∂–¥—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–æ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
–∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –±–æ—Ç–∞.
"""

from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message
from loguru import logger

from bot.database import get_db
from bot.keyboards.main_kb import (
    get_help_type_keyboard,
    get_main_menu_keyboard,
    get_subjects_keyboard,
)
from bot.services.simple_monitor import get_simple_monitor
from bot.services.user_service import UserService

router = Router(name="menu")


@router.message(F.text == "üìö –ü–æ–º–æ—â—å —Å —É—Ä–æ–∫–∞–º–∏")
async def homework_help(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üìö –ü–æ–º–æ—â—å —Å —É—Ä–æ–∫–∞–º–∏".

    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤—ã–±–æ—Ä–∞ —à–∫–æ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è
    –ø–æ–º–æ—â–∏ —Å –¥–æ–º–∞—à–Ω–∏–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏ –æ—Ç AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞.

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–µ–∫—Å—Ç–æ–º –∫–Ω–æ–ø–∫–∏.
        state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç FSM –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –¥–∏–∞–ª–æ–≥–∞.
    """
    telegram_id = message.from_user.id

    logger.info(f"üìö –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_id} –æ—Ç–∫—Ä—ã–ª –ø–æ–º–æ—â—å —Å —É—Ä–æ–∫–∞–º–∏")

    await message.answer(
        text="üìö <b>–ü–æ–º–æ—â—å —Å —É—Ä–æ–∫–∞–º–∏</b>\n\n" "–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç, —Å –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å:",
        reply_markup=get_subjects_keyboard(),
        parse_mode="HTML",
    )


@router.callback_query(F.data.startswith("subject:"))
async def subject_selected(callback: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–∏–ø—ã –ø–æ–º–æ—â–∏
    """
    subject = callback.data.split(":")[1]

    subject_names = {
        "math": "üî¢ –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
        "russian": "üìñ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫",
        "world": "üåç –û–∫—Ä—É–∂–∞—é—â–∏–π –º–∏—Ä",
        "english": "üá¨üáß –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫",
        "chemistry": "‚öóÔ∏è –•–∏–º–∏—è",
        "physics": "üî¨ –§–∏–∑–∏–∫–∞",
        "history": "üìú –ò—Å—Ç–æ—Ä–∏—è",
        "geography": "üåé –ì–µ–æ–≥—Ä–∞—Ñ–∏—è",
        "other": "üé® –î—Ä—É–≥–æ–π –ø—Ä–µ–¥–º–µ—Ç",
    }

    subject_name = subject_names.get(subject, subject)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.update_data(subject=subject, subject_name=subject_name)

    logger.info(f"–í—ã–±—Ä–∞–Ω –ø—Ä–µ–¥–º–µ—Ç: {subject_name}")

    await callback.message.edit_text(
        text=f"üìö <b>{subject_name}</b>\n\n" "–ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å?",
        reply_markup=get_help_type_keyboard(),
        parse_mode="HTML",
    )

    await callback.answer()


@router.callback_query(F.data.startswith("help:"))
async def help_type_selected(callback: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–æ–º–æ—â–∏
    """
    help_type = callback.data.split(":")[1]

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    subject_name = data.get("subject_name", "–ø—Ä–µ–¥–º–µ—Ç")

    help_texts = {
        "solve": f"üìù <b>–†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –ø–æ {subject_name}</b>\n\n"
        "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —É—Å–ª–æ–≤–∏–µ –∑–∞–¥–∞—á–∏, –∏ —è –ø–æ–º–æ–≥—É –µ—ë —Ä–µ—à–∏—Ç—å —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º!",
        "explain": f"üìö <b>–û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ç–µ–º—ã –ø–æ {subject_name}</b>\n\n"
        "–ù–∞–ø–∏—à–∏, –∫–∞–∫—É—é —Ç–µ–º—É –Ω—É–∂–Ω–æ –æ–±—ä—è—Å–Ω–∏—Ç—å, –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏!",
        "check": f"‚úÖ <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ {subject_name}</b>\n\n"
        "–û—Ç–ø—Ä–∞–≤—å –∑–∞–¥–∞—á—É –∏ —Å–≤–æ–π –æ—Ç–≤–µ—Ç, —è –ø—Ä–æ–≤–µ—Ä—é –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∏ –æ–±—ä—è—Å–Ω—é –æ—à–∏–±–∫–∏!",
        "hint": f"üí° <b>–ü–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ {subject_name}</b>\n\n"
        "–û–ø–∏—à–∏ –∑–∞–¥–∞—á—É, –∏ —è –¥–∞–º —Ç–µ–±–µ –ø–æ–¥—Å–∫–∞–∑–∫—É, —á—Ç–æ–±—ã —Ç—ã —Å–º–æ–≥ —Ä–µ—à–∏—Ç—å –µ—ë —Å–∞–º!",
    }

    response_text = help_texts.get(help_type, "–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å!")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∂–∏–º –ø–æ–º–æ—â–∏
    await state.update_data(help_mode=help_type)

    await callback.message.edit_text(text=response_text, parse_mode="HTML")

    await callback.answer()


@router.message(F.text == "üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å")
async def show_progress(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å"
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    """
    telegram_id = message.from_user.id

    logger.info(f"üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_id} –æ—Ç–∫—Ä—ã–ª –ø—Ä–æ–≥—Ä–µ—Å—Å")

    with get_db() as db:
        user_service = UserService(db)

        user = user_service.get_user_by_telegram_id(telegram_id)

        if not user:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞–ø–∏—à–∏ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
            return

        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ—Ä–µ–∑ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä
        try:
            monitor = get_simple_monitor()
            # –ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞ - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –ø–æ–∑–∂–µ
            analytics = {"total_messages": 0, "total_learning_sessions": 0, "total_time_spent": 0}

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
            progress_text = f"""
üìä <b>–¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å</b>

üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å:</b>
‚Ä¢ –ò–º—è: {user.first_name}
‚Ä¢ –ö–ª–∞—Å—Å: {user.grade if user.grade else '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç: {user.age if user.age else '–ù–µ —É–∫–∞–∑–∞–Ω'}

üìà <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {analytics.get('total_messages', 0)}
‚Ä¢ –í–æ–ø—Ä–æ—Å–æ–≤ –∑–∞–¥–∞–Ω–æ: {analytics.get('questions_asked', 0)}
‚Ä¢ –î–Ω–µ–π —Å –±–æ—Ç–æ–º: {analytics.get('days_active', 0)}

üéØ <b>–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:</b>
üöß <i>–°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</i>

üí° <b>–ü—Ä–æ–¥–æ–ª–∂–∞–π —É—á–∏—Ç—å—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å!</b>
"""
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            progress_text = f"""
üìä <b>–¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å</b>

üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å:</b>
‚Ä¢ –ò–º—è: {user.first_name}
‚Ä¢ –ö–ª–∞—Å—Å: {user.grade if user.grade else '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç: {user.age if user.age else '–ù–µ —É–∫–∞–∑–∞–Ω'}

üí° <b>–ü—Ä–æ–¥–æ–ª–∂–∞–π —É—á–∏—Ç—å—Å—è!</b>
"""

    await message.answer(
        text=progress_text, parse_mode="HTML", reply_markup=get_main_menu_keyboard()
    )


@router.callback_query(F.data == "menu:main")
async def back_to_main_menu(callback: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    """
    await state.clear()

    await callback.message.edit_text(
        text="üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n" "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá", parse_mode="HTML"
    )

    await callback.answer()
