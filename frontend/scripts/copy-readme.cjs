/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è README —Ñ–∞–π–ª–æ–≤ –≤ public –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é.
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É –∑–∞–≥—Ä—É–∂–∞—Ç—å README.md –∏ README_EN.md —á–µ—Ä–µ–∑ HTTP.
 */

const fs = require('fs');
const path = require('path');

// –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
const sourceDir = path.join(__dirname, '../../');
const targetDir = path.join(__dirname, '../public/');

// –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
const filesToCopy = ['README.md', 'README_EN.md'];

console.log('üìö –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ README —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...');

// –°–æ–∑–¥–∞—ë–º public –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
if (!fs.existsSync(targetDir)) {
  fs.mkdirSync(targetDir, { recursive: true });
}

// –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
filesToCopy.forEach(filename => {
  const sourcePath = path.join(sourceDir, filename);
  const targetPath = path.join(targetDir, filename);

  if (fs.existsSync(sourcePath)) {
    fs.copyFileSync(sourcePath, targetPath);
    console.log(`‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: ${filename}`);
  } else {
    console.log(`‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${filename}`);
  }
});

console.log('üéâ README —Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ public/');
